"use client";

import { useState } from 'react';
import Image from 'next/image';

// Updated data with real team names
const hackathonEntries = [
  { id: 1, name: "NeuralNet Navigator", team: "Techtonic Alliance", description: "AI-powered navigation system for autonomous vehicles", position: 1, category: "AI/ML", image: "/projects/project1.png" },
  { id: 2, name: "BlockHealth", team: "Team Conquerors", description: "Blockchain solution for secure medical record sharing", position: 2, category: "Blockchain", image: "/projects/project2.png" },
  { id: 3, name: "EcoTrack", team: "Sozo", description: "IoT platform for environmental monitoring", position: 3, category: "IoT", image: "/projects/project3.png" },
  { id: 4, name: "SecureSpeak", team: "GCOEY", description: "End-to-end encrypted messaging platform", position: 4, category: "Security", image: "/projects/project4.png" },
  { id: 5, name: "ARchitect", team: "UnderDogs", description: "Augmented reality for architectural visualization", position: 5, category: "AR/VR", image: "/projects/project5.png" },
  { id: 6, name: "CodeAssist", team: "Apophis", description: "AI pair programmer with natural language processing", position: 6, category: "Developer Tools", image: "/projects/project6.png" },
  { id: 7, name: "TradeBot", team: "SpeadeX", description: "Algorithmic trading platform with ML insights", position: 7, category: "FinTech", image: "/projects/project7.png" },
  { id: 8, name: "MindfulMe", team: "MISSION_I_M_POSSIBLE", description: "Mental health tracking with mood prediction", position: 8, category: "Health", image: "/projects/project8.png" },
  { id: 9, name: "VoiceOS", team: "HackSnorlax", description: "Voice-first operating system for accessibility", position: 9, category: "Accessibility", image: "/projects/project9.png" },
  { id: 10, name: "DataViz", team: "DevOcs", description: "Advanced data visualization platform", position: 10, category: "Data Science", image: "/projects/project10.png" },
  { id: 11, name: "CloudSync", team: "Team Zenith", description: "Multi-cloud management solution", position: 11, category: "Cloud Computing", image: "/projects/project11.png" },
  { id: 12, name: "GameAI", team: "Supa Strikas", description: "Advanced NPC behavior using reinforcement learning", position: 12, category: "Gaming", image: "/projects/project12.png" },
  { id: 13, name: "SmartContract", team: "EduSphere", description: "Automated smart contract generator and validator", position: 13, category: "Blockchain", image: "/projects/project13.png" },
  { id: 14, name: "EdgeCompute", team: "Bro Code", description: "Edge computing framework for IoT devices", position: 14, category: "IoT", image: "/projects/project14.png" },
  { id: 15, name: "SocialGraph", team: "BB", description: "Graph-based social network analysis tool", position: 15, category: "Social Tech", image: "/projects/project15.png" },
  { id: 16, name: "RoboFarm", team: "Health+", description: "Automated farming with robotics and IoT", position: 16, category: "AgTech", image: "/projects/project16.png" },
  { id: 17, name: "GenArt", team: "Runtime Terrors", description: "Generative art platform with AI", position: 17, category: "Creative Tech", image: "/projects/project17.png" },
  { id: 18, name: "SpaceView", team: "DevPair", description: "Space data visualization and analytics", position: 18, category: "Data Science", image: "/projects/project18.png" },
  { id: 19, name: "BioSim", team: "SymbiSparkk", description: "Biological process simulation engine", position: 19, category: "BioTech", image: "/projects/project19.png" },
  { id: 20, name: "WaveSynth", team: "Undefined", description: "AI-powered music synthesis and remixing", position: 20, category: "Audio Tech", image: "/projects/project20.png" }
];

function App() {
  const [activeCategory, setActiveCategory] = useState('all');

  const categories = ['all', ...new Set(hackathonEntries.map(entry => entry.category))];
  
  const filteredEntries = activeCategory === 'all' 
    ? hackathonEntries 
    : hackathonEntries.filter(entry => entry.category === activeCategory);

  const winners = hackathonEntries.filter(entry => entry.position <= 3);
  const honorableMentions = hackathonEntries.filter(entry => entry.position > 3 && entry.position <= 10);

  return (
    <div className="min-h-screen bg-gray-900 text-white p-4 md:p-8" suppressHydrationWarning>
      {/* Header */}
      <header className="text-center mb-12">
        <h1 className="text-4xl md:text-6xl font-bold mb-4 bg-clip-text text-transparent bg-gradient-to-r from-cyan-400 to-purple-600">
          HackSphere 2025 Results
        </h1>
        <p className="text-lg text-cyan-100 max-w-3xl mx-auto">
          Celebrating innovation and technical excellence from our shortlisted teams pushing the boundaries of technology.
        </p>
      </header>

      {/* Winners Podium */}
      <section className="mb-16">
        <div className="relative">
          <h2 className="text-3xl font-bold mb-10 text-center">
            <span className="border-b-2 border-cyan-500 pb-2 px-4">üèÜ Winners Podium üèÜ</span>
          </h2>
          
          <div className="flex flex-col md:flex-row justify-center items-end gap-4 md:gap-8">
            {/* 2nd Place */}
            <div className="w-full md:w-1/4 order-2 md:order-1">
              <div className="h-16 bg-blue-600 bg-opacity-20 flex items-center justify-center relative">
                <span className="absolute -top-6 left-1/2 -translate-x-1/2 bg-blue-500 text-white px-4 py-1 rounded-t-lg font-bold">
                  2nd Place
                </span>
                <span className="text-3xl">ü•à</span>
              </div>
              <div className="bg-gray-800 border-2 border-blue-500 p-5 rounded-b-lg shadow-lg shadow-blue-900/30">
                <h3 className="text-xl font-bold mb-1 text-blue-300">{winners[1]?.name}</h3>
                <p className="text-sm text-gray-300 mb-2">by {winners[1]?.team}</p>
                <p className="text-sm">{winners[1]?.description}</p>
                <span className="inline-block mt-3 text-xs bg-blue-900 text-blue-200 rounded-full px-3 py-1">
                  {winners[1]?.category}
                </span>
              </div>
            </div>
            
            {/* 1st Place */}
            <div className="w-full md:w-1/3 order-1 md:order-2 mb-8 md:mb-0">
              <div className="h-24 bg-yellow-600 bg-opacity-20 flex items-center justify-center relative">
                <span className="absolute -top-6 left-1/2 -translate-x-1/2 bg-yellow-500 text-white px-4 py-1 rounded-t-lg font-bold">
                  1st Place
                </span>
                <span className="text-5xl">ü•á</span>
              </div>
              <div className="bg-gray-800 border-2 border-yellow-500 p-6 rounded-b-lg shadow-lg shadow-yellow-900/30 relative">
                <div className="absolute top-0 left-0 w-full h-1 bg-gradient-to-r from-yellow-500 via-yellow-200 to-yellow-500 animate-pulse"></div>
                <h3 className="text-2xl font-bold mb-2 text-yellow-300">{winners[0]?.name}</h3>
                <p className="text-gray-300 mb-3">by {winners[0]?.team}</p>
                <p>{winners[0]?.description}</p>
                <span className="inline-block mt-4 text-xs bg-yellow-900 text-yellow-200 rounded-full px-3 py-1">
                  {winners[0]?.category}
                </span>
              </div>
            </div>
            
            {/* 3rd Place */}
            <div className="w-full md:w-1/4 order-3">
              <div className="h-10 bg-green-600 bg-opacity-20 flex items-center justify-center relative">
                <span className="absolute -top-6 left-1/2 -translate-x-1/2 bg-green-500 text-white px-4 py-1 rounded-t-lg font-bold">
                  3rd Place
                </span>
                <span className="text-2xl">ü•â</span>
              </div>
              <div className="bg-gray-800 border-2 border-green-500 p-5 rounded-b-lg shadow-lg shadow-green-900/30">
                <h3 className="text-xl font-bold mb-1 text-green-300">{winners[2]?.name}</h3>
                <p className="text-sm text-gray-300 mb-2">by {winners[2]?.team}</p>
                <p className="text-sm">{winners[2]?.description}</p>
                <span className="inline-block mt-3 text-xs bg-green-900 text-green-200 rounded-full px-3 py-1">
                  {winners[2]?.category}
                </span>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Honorable Mentions */}
      <section className="mb-16">
        <h2 className="text-2xl font-bold mb-8 text-center">
          <span className="border-b-2 border-purple-500 pb-2 px-4">‚ú® Honorable Mentions ‚ú®</span>
        </h2>
        
        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-5">
          {honorableMentions.map(entry => (
            <div key={entry.id} className="bg-gray-800 border border-gray-700 hover:border-purple-500 rounded-lg p-4 transition-all duration-300 hover:shadow-md hover:shadow-purple-900/20">
              <div className="flex justify-between items-start mb-3">
                <h3 className="text-lg font-bold text-purple-300">{entry.name}</h3>
                <span className="bg-purple-900 text-purple-200 text-xs px-2 py-1 rounded-full">#{entry.position}</span>
              </div>
              <p className="text-sm text-gray-300 mb-2">by {entry.team}</p>
              <p className="text-sm mb-3">{entry.description}</p>
              <span className="inline-block text-xs bg-gray-700 text-purple-300 rounded-full px-3 py-1">
                {entry.category}
              </span>
            </div>
          ))}
        </div>
      </section>

      {/* All Projects */}
      <section>
        <h2 className="text-2xl font-bold mb-8 text-center">
          <span className="border-b-2 border-cyan-500 pb-2 px-4">üöÄ All Projects üöÄ</span>
        </h2>
        
        {/* Category Filter */}
        <div className="flex flex-wrap justify-center gap-2 mb-8">
          {categories.map(category => (
            <button
              key={category}
              onClick={() => setActiveCategory(category)}
              className={`px-3 py-1 rounded-full text-sm transition-all duration-200 ${
                activeCategory === category 
                  ? 'bg-cyan-600 text-white font-medium' 
                  : 'bg-gray-700 hover:bg-gray-600 text-gray-300'
              }`}
            >
              {category === 'all' ? 'All Categories' : category}
            </button>
          ))}
        </div>
        
        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4">
          {filteredEntries.map(entry => (
            <div 
              key={entry.id} 
              className={`bg-gray-800 border border-gray-700 rounded-lg overflow-hidden transition-all duration-300 ${
                entry.position <= 3 ? `ring-2 ${
                  entry.position === 1 ? 'ring-yellow-500' : 
                  entry.position === 2 ? 'ring-blue-500' : 
                  'ring-green-500'
                }` : 'hover:border-cyan-700'
              }`}
            >
              <div className="h-32 bg-gray-700 relative overflow-hidden">
                {/* This would be a project image in production */}
                <div className="absolute inset-0 flex items-center justify-center text-4xl">
                  {entry.position <= 3 ? ['ü•á', 'ü•à', 'ü•â'][entry.position-1] : 'üíª'}
                </div>
                {entry.position <= 10 && (
                  <div className={`absolute top-2 right-2 rounded-full px-2 py-0.5 text-xs font-bold ${
                    entry.position <= 3 
                      ? ['bg-yellow-500', 'bg-blue-500', 'bg-green-500'][entry.position-1] 
                      : 'bg-purple-600'
                  }`}>
                    #{entry.position}
                  </div>
                )}
              </div>
              <div className="p-4">
                <h3 className="font-bold mb-1">{entry.name}</h3>
                <p className="text-sm text-gray-400 mb-2">by {entry.team}</p>
                <p className="text-sm text-gray-300 mb-3">{entry.description}</p>
                <span className="inline-block text-xs bg-gray-700 text-cyan-300 rounded-full px-3 py-1">
                  {entry.category}
                </span>
              </div>
            </div>
          ))}
        </div>
      </section>

      {/* Teams Recognition */}
      <section className="mt-16 mb-8">
        <h2 className="text-2xl font-bold mb-8 text-center">
          <span className="border-b-2 border-pink-500 pb-2 px-4">üëè All Shortlisted Teams üëè</span>
        </h2>
        
        <div className="max-w-4xl mx-auto bg-gray-800/50 rounded-xl p-6 border border-gray-700">
          <p className="text-center mb-6 text-gray-300">Recognition to all teams that made it to the shortlist:</p>
          
          <div className="flex flex-wrap justify-center gap-3">
            {[
              "Techtonic Alliance", "Team Conquerors", "Sozo", "GCOEY", "UnderDogs", "Apophis", 
              "SpeadeX", "MISSION_I_M_POSSIBLE", "HackSnorlax", "DevOcs", "Team Zenith", 
              "Supa Strikas", "EduSphere", "Bro Code", "BB", "Health+", "Runtime Terrors", 
              "DevPair", "SymbiSparkk", "Undefined", "IlI_Stellar.Squad_IlI", "Team Glycon", 
              "404 Brain Not Found", "The Beginners 2.0", "Full Stack Force", "404_forbidden", "Hackoholics"
            ].map((team, index) => (
              <span 
                key={index} 
                className={`px-3 py-1 bg-gray-700 rounded-full text-sm ${
                  hackathonEntries.some(entry => entry.team === team)
                    ? 'border border-cyan-500 text-cyan-200'
                    : 'text-gray-300'
                }`}
              >
                {team}
              </span>
            ))}
          </div>
        </div>
      </section>
    </div>
  );
}

export default App;